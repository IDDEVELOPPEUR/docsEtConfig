spring.application.name=docsEtConfig
#Cette option nous permet de choisir soit root ou DOCS_CONFIG_DB_PWD comme user ;
#pour mon cas, c'est root qui choisi, car je n'ai pas ajouté DOCS? dans la variable d'environnement.

spring.datasource.username=${DOCS_CONFIG_DB_USER:root}
#on utilise une variable d'environnement pour le mot de passe, car on ne doit pas à tout le monde de prendre le même mot de passe
spring.datasource.password=${DOCS_CONFIG_DB_PWD}
#la même chose pour ce qui suit comme le USER, mais on le fait pour chaque élément se trouvant dans l'url
spring.datasource.url=jdbc:mysql://${DOCS_CONFIG_DB_HOST:localhost}:${DOCS_CONFIG_DB_PORT:3306}/${DOCS_CONFIG_DB_NAME:doc_config}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
server.port=8085
#la ligne suivante nous permet de dire que le profile active est le profile dont après application-nomProfile
#cela permet de l'activer et on ne peut activer qu'un seul profil .par défaut application.properties est activé de manière automatique.
#exemple application-dev.properties ou application-souley.properties ;les noms des profiles sont : dev et souley
#L'activation des profils ne se fera que dans application.properties
#spring.profiles.active=dev
#POUR UTILISER SOIT UNE OPTION OU L'AUTRE ON DOIT METTRE CE QUI SUIT :
#spring.profiles.active=${DOCS_CONFIG_PROFILE:dev}
#POUR IMPOSER A PRENDRE LE NOM DE LA VARIABLE ET C'EST QUI EST RECOMMANDE

spring.profiles.active=${DOCS_CONFIG_PROFILE}

#ces variables d'environnement nous permet de ne pas toucher le code source à chaque fois qu'on veut faire des changements au niveau de ces paramètres,
#qu'on ne retouche pas le code source et on va directement dans les variables d'environnement pour faire là-bas le changement qu'on voudra faire.